
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '44D52802B34FD7F39AE23D45CB68AA95'
    
_lr_action_items = {'DO':([10,12,16,17,18,20,21,22,23,25,26,37,61,63,64,65,66,67,68,69,70,71,72,73,74,75,77,],[-40,-35,-37,-31,-36,-32,-38,-33,36,-34,-15,-16,-30,-29,-22,-25,-18,-27,-24,-26,-17,-23,-19,-20,-28,-21,-39,]),'SUB':([10,12,16,17,18,20,21,22,25,26,35,37,61,63,64,65,66,67,68,69,70,71,72,73,74,75,77,],[-40,-35,-37,-31,-36,-32,-38,-33,-34,41,41,-16,-30,41,41,41,-18,41,41,41,-17,41,-19,-20,41,-21,-39,]),'THEN':([10,12,16,17,18,20,21,22,25,26,33,37,61,63,64,65,66,67,68,69,70,71,72,73,74,75,77,],[-40,-35,-37,-31,-36,-32,-38,-33,-34,-15,57,-16,-30,-29,-22,-25,-18,-27,-24,-26,-17,-23,-19,-20,-28,-21,-39,]),'WHILE':([0,1,5,6,7,8,9,10,11,12,15,16,17,18,20,21,22,25,26,36,37,51,52,53,54,55,56,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,83,84,],[2,2,-7,-5,-3,-4,-6,-40,-8,-35,-2,-37,-31,-36,-32,-38,-33,-34,-15,2,-16,-11,-14,-9,-13,-12,-10,2,-30,2,-29,-22,-25,-18,-27,-24,-26,-17,-23,-19,-20,-28,-21,2,-39,-46,-44,2,2,-45,]),'DIV_ASSIGN':([3,12,],[31,-35,]),'MUL':([10,12,16,17,18,20,21,22,25,26,35,37,61,63,64,65,66,67,68,69,70,71,72,73,74,75,77,],[-40,-35,-37,-31,-36,-32,-38,-33,-34,47,47,-16,-30,47,47,47,47,47,47,47,47,47,-19,-20,47,-21,-39,]),'DIV':([10,12,16,17,18,20,21,22,25,26,35,37,61,63,64,65,66,67,68,69,70,71,72,73,74,75,77,],[-40,-35,-37,-31,-36,-32,-38,-33,-34,48,48,-16,-30,48,48,48,48,48,48,48,48,48,-19,-20,48,-21,-39,]),'TRUE':([2,13,19,24,27,28,29,30,31,32,38,39,40,41,42,43,44,45,46,47,48,49,50,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'RPAREN':([10,12,16,17,18,20,21,22,25,35,37,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,77,82,],[-40,-35,-37,-31,-36,-32,-38,-33,-34,61,-16,-43,77,-41,-30,-29,-22,-25,-18,-27,-24,-26,-17,-23,-19,-20,-28,-21,-39,-42,]),'LTE':([10,12,16,17,18,20,21,22,25,26,35,37,61,63,64,65,66,67,68,69,70,71,72,73,74,75,77,],[-40,-35,-37,-31,-36,-32,-38,-33,-34,40,40,-16,-30,40,None,None,-18,None,None,None,-17,None,-19,-20,40,-21,-39,]),'NE':([10,12,16,17,18,20,21,22,25,26,35,37,61,63,64,65,66,67,68,69,70,71,72,73,74,75,77,],[-40,-35,-37,-31,-36,-32,-38,-33,-34,44,44,-16,-30,44,None,None,-18,None,None,None,-17,None,-19,-20,44,-21,-39,]),'LT':([10,12,16,17,18,20,21,22,25,26,35,37,61,63,64,65,66,67,68,69,70,71,72,73,74,75,77,],[-40,-35,-37,-31,-36,-32,-38,-33,-34,43,43,-16,-30,43,None,None,-18,None,None,None,-17,None,-19,-20,43,-21,-39,]),'NUM':([2,13,19,24,27,28,29,30,31,32,38,39,40,41,42,43,44,45,46,47,48,49,50,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'COMMA':([58,59,60,82,],[-43,78,-41,-42,]),'ASSIGN':([3,12,],[29,-35,]),'$end':([1,4,5,6,7,8,9,10,11,12,15,16,17,18,20,21,22,25,26,37,51,52,53,54,55,56,61,63,64,65,66,67,68,69,70,71,72,73,74,75,77,79,80,84,],[-1,0,-7,-5,-3,-4,-6,-40,-8,-35,-2,-37,-31,-36,-32,-38,-33,-34,-15,-16,-11,-14,-9,-13,-12,-10,-30,-29,-22,-25,-18,-27,-24,-26,-17,-23,-19,-20,-28,-21,-39,-46,-44,-45,]),'AND':([10,12,16,17,18,20,21,22,25,26,35,37,61,63,64,65,66,67,68,69,70,71,72,73,74,75,77,],[-40,-35,-37,-31,-36,-32,-38,-33,-34,38,38,-16,-30,-29,-22,-25,-18,-27,-24,-26,-17,-23,-19,-20,38,-21,-39,]),'GT':([10,12,16,17,18,20,21,22,25,26,35,37,61,63,64,65,66,67,68,69,70,71,72,73,74,75,77,],[-40,-35,-37,-31,-36,-32,-38,-33,-34,39,39,-16,-30,39,None,None,-18,None,None,None,-17,None,-19,-20,39,-21,-39,]),'END':([5,6,7,8,9,10,11,12,15,16,17,18,20,21,22,25,26,37,51,52,53,54,55,56,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,83,84,],[-7,-5,-3,-4,-6,-40,-8,-35,-2,-37,-31,-36,-32,-38,-33,-34,-15,-16,-11,-14,-9,-13,-12,-10,-30,79,-29,-22,-25,-18,-27,-24,-26,-17,-23,-19,-20,-28,-21,80,-39,-46,-44,84,-45,]),'GTE':([10,12,16,17,18,20,21,22,25,26,35,37,61,63,64,65,66,67,68,69,70,71,72,73,74,75,77,],[-40,-35,-37,-31,-36,-32,-38,-33,-34,46,46,-16,-30,46,None,None,-18,None,None,None,-17,None,-19,-20,46,-21,-39,]),'ELSE':([5,6,7,8,9,10,11,12,15,16,17,18,20,21,22,25,26,37,51,52,53,54,55,56,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,84,],[-7,-5,-3,-4,-6,-40,-8,-35,-2,-37,-31,-36,-32,-38,-33,-34,-15,-16,-11,-14,-9,-13,-12,-10,-30,-29,-22,-25,-18,-27,-24,-26,-17,-23,-19,-20,-28,-21,81,-39,-46,-44,-45,]),'ADD':([10,12,16,17,18,20,21,22,25,26,35,37,61,63,64,65,66,67,68,69,70,71,72,73,74,75,77,],[-40,-35,-37,-31,-36,-32,-38,-33,-34,45,45,-16,-30,45,45,45,-18,45,45,45,-17,45,-19,-20,45,-21,-39,]),'COMMAND':([0,1,2,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,83,84,],[10,10,10,-7,-5,-3,-4,-6,-40,-8,-35,10,-2,-37,-31,-36,10,-32,-38,-33,10,-34,-15,10,10,10,10,10,10,10,-16,10,10,10,10,10,10,10,10,10,10,10,10,10,-11,-14,-9,-13,-12,-10,10,-30,10,-29,-22,-25,-18,-27,-24,-26,-17,-23,-19,-20,-28,-21,10,-39,-46,-44,10,10,-45,]),'LPAREN':([2,13,14,19,24,27,28,29,30,31,32,38,39,40,41,42,43,44,45,46,47,48,49,50,],[19,19,34,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'EQ':([10,12,16,17,18,20,21,22,25,26,35,37,61,63,64,65,66,67,68,69,70,71,72,73,74,75,77,],[-40,-35,-37,-31,-36,-32,-38,-33,-34,42,42,-16,-30,42,None,None,-18,None,None,None,-17,None,-19,-20,42,-21,-39,]),'ID':([0,1,2,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,83,84,],[12,12,12,-7,-5,-3,-4,-6,-40,-8,-35,12,-2,-37,-31,-36,12,-32,-38,-33,12,-34,-15,12,12,12,12,12,12,12,-16,12,12,12,12,12,12,12,12,12,12,12,12,12,-11,-14,-9,-13,-12,-10,12,-30,12,-29,-22,-25,-18,-27,-24,-26,-17,-23,-19,-20,-28,-21,12,-39,-46,-44,12,12,-45,]),'IF':([0,1,5,6,7,8,9,10,11,12,15,16,17,18,20,21,22,25,26,36,37,51,52,53,54,55,56,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,83,84,],[13,13,-7,-5,-3,-4,-6,-40,-8,-35,-2,-37,-31,-36,-32,-38,-33,-34,-15,13,-16,-11,-14,-9,-13,-12,-10,13,-30,13,-29,-22,-25,-18,-27,-24,-26,-17,-23,-19,-20,-28,-21,13,-39,-46,-44,13,13,-45,]),'SUB_ASSIGN':([3,12,],[27,-35,]),'MOD_ASSIGN':([3,12,],[28,-35,]),'FALSE':([2,13,19,24,27,28,29,30,31,32,38,39,40,41,42,43,44,45,46,47,48,49,50,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'ADD_ASSIGN':([3,12,],[32,-35,]),'MUL_ASSIGN':([3,12,],[30,-35,]),'ARG':([34,78,],[58,58,]),'NOT':([2,13,19,24,27,28,29,30,31,32,38,39,40,41,42,43,44,45,46,47,48,49,50,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'MOD':([10,12,16,17,18,20,21,22,25,26,35,37,61,63,64,65,66,67,68,69,70,71,72,73,74,75,77,],[-40,-35,-37,-31,-36,-32,-38,-33,-34,50,50,-16,-30,50,50,50,50,50,50,50,50,50,-19,-20,50,-21,-39,]),'OR':([10,12,16,17,18,20,21,22,25,26,35,37,61,63,64,65,66,67,68,69,70,71,72,73,74,75,77,],[-40,-35,-37,-31,-36,-32,-38,-33,-34,49,49,-16,-30,-29,-22,-25,-18,-27,-24,-26,-17,-23,-19,-20,-28,-21,-39,]),'FUNC_ID':([0,1,2,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,83,84,],[14,14,14,-7,-5,-3,-4,-6,-40,-8,-35,14,-2,-37,-31,-36,14,-32,-38,-33,14,-34,-15,14,14,14,14,14,14,14,-16,14,14,14,14,14,14,14,14,14,14,14,14,14,-11,-14,-9,-13,-12,-10,14,-30,14,-29,-22,-25,-18,-27,-24,-26,-17,-23,-19,-20,-28,-21,14,-39,-46,-44,14,14,-45,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,36,57,81,],[1,62,76,83,]),'func':([0,1,2,13,19,24,27,28,29,30,31,32,36,38,39,40,41,42,43,44,45,46,47,48,49,50,57,62,76,81,83,],[11,11,25,25,25,25,25,25,25,25,25,25,11,25,25,25,25,25,25,25,25,25,25,25,25,25,11,11,11,11,11,]),'assign_statement':([0,1,36,57,62,76,81,83,],[5,5,5,5,5,5,5,5,]),'args':([34,],[59,]),'start':([0,],[4,]),'while_statement':([0,1,36,57,62,76,81,83,],[6,6,6,6,6,6,6,6,]),'command':([0,1,2,13,19,24,27,28,29,30,31,32,36,38,39,40,41,42,43,44,45,46,47,48,49,50,57,62,76,81,83,],[8,8,22,22,22,22,22,22,22,22,22,22,8,22,22,22,22,22,22,22,22,22,22,22,22,22,8,8,8,8,8,]),'statement':([0,1,36,57,62,76,81,83,],[7,15,7,7,15,15,7,15,]),'arg':([34,78,],[60,82,]),'const':([2,13,19,24,27,28,29,30,31,32,38,39,40,41,42,43,44,45,46,47,48,49,50,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'if_statement':([0,1,36,57,62,76,81,83,],[9,9,9,9,9,9,9,9,]),'expression':([2,13,19,24,27,28,29,30,31,32,38,39,40,41,42,43,44,45,46,47,48,49,50,],[26,26,35,37,26,26,26,26,26,26,63,64,65,66,67,68,69,70,71,72,73,74,75,]),'id':([0,1,2,13,19,24,27,28,29,30,31,32,36,38,39,40,41,42,43,44,45,46,47,48,49,50,57,62,76,81,83,],[3,3,17,17,17,17,17,17,17,17,17,17,3,17,17,17,17,17,17,17,17,17,17,17,17,17,3,3,3,3,3,]),'root_expression':([2,13,27,28,29,30,31,32,],[23,33,51,52,53,54,55,56,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> statements','start',1,'p_start','compile.py',148),
  ('statements -> statements statement','statements',2,'p_statements','compile.py',153),
  ('statements -> statement','statements',1,'p_statements','compile.py',154),
  ('statement -> command','statement',1,'p_statement','compile.py',162),
  ('statement -> while_statement','statement',1,'p_statement','compile.py',163),
  ('statement -> if_statement','statement',1,'p_statement','compile.py',164),
  ('statement -> assign_statement','statement',1,'p_statement','compile.py',165),
  ('statement -> func','statement',1,'p_statement','compile.py',166),
  ('assign_statement -> id ASSIGN root_expression','assign_statement',3,'p_assign_statement','compile.py',172),
  ('assign_statement -> id ADD_ASSIGN root_expression','assign_statement',3,'p_assign_statement','compile.py',173),
  ('assign_statement -> id SUB_ASSIGN root_expression','assign_statement',3,'p_assign_statement','compile.py',174),
  ('assign_statement -> id DIV_ASSIGN root_expression','assign_statement',3,'p_assign_statement','compile.py',175),
  ('assign_statement -> id MUL_ASSIGN root_expression','assign_statement',3,'p_assign_statement','compile.py',176),
  ('assign_statement -> id MOD_ASSIGN root_expression','assign_statement',3,'p_assign_statement','compile.py',177),
  ('root_expression -> expression','root_expression',1,'p_root_expression','compile.py',183),
  ('expression -> NOT expression','expression',2,'p_not_expression','compile.py',187),
  ('expression -> expression ADD expression','expression',3,'p_expression','compile.py',192),
  ('expression -> expression SUB expression','expression',3,'p_expression','compile.py',193),
  ('expression -> expression MUL expression','expression',3,'p_expression','compile.py',194),
  ('expression -> expression DIV expression','expression',3,'p_expression','compile.py',195),
  ('expression -> expression MOD expression','expression',3,'p_expression','compile.py',196),
  ('expression -> expression GT expression','expression',3,'p_expression','compile.py',197),
  ('expression -> expression GTE expression','expression',3,'p_expression','compile.py',198),
  ('expression -> expression LT expression','expression',3,'p_expression','compile.py',199),
  ('expression -> expression LTE expression','expression',3,'p_expression','compile.py',200),
  ('expression -> expression NE expression','expression',3,'p_expression','compile.py',201),
  ('expression -> expression EQ expression','expression',3,'p_expression','compile.py',202),
  ('expression -> expression OR expression','expression',3,'p_expression','compile.py',203),
  ('expression -> expression AND expression','expression',3,'p_expression','compile.py',204),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','compile.py',205),
  ('expression -> id','expression',1,'p_expression','compile.py',206),
  ('expression -> const','expression',1,'p_expression','compile.py',207),
  ('expression -> command','expression',1,'p_expression','compile.py',208),
  ('expression -> func','expression',1,'p_expression','compile.py',209),
  ('id -> ID','id',1,'p_id','compile.py',222),
  ('const -> NUM','const',1,'p_const','compile.py',228),
  ('const -> TRUE','const',1,'p_const','compile.py',229),
  ('const -> FALSE','const',1,'p_const','compile.py',230),
  ('func -> FUNC_ID LPAREN args RPAREN','func',4,'p_func','compile.py',234),
  ('command -> COMMAND','command',1,'p_command','compile.py',238),
  ('args -> arg','args',1,'p_args','compile.py',242),
  ('args -> args COMMA arg','args',3,'p_args','compile.py',243),
  ('arg -> ARG','arg',1,'p_arg','compile.py',252),
  ('if_statement -> IF root_expression THEN statements END','if_statement',5,'p_if_statement','compile.py',257),
  ('if_statement -> IF root_expression THEN statements ELSE statements END','if_statement',7,'p_if_else_statement','compile.py',261),
  ('while_statement -> WHILE root_expression DO statements END','while_statement',5,'p_while_statement','compile.py',265),
]
