
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'B02F40650F831EA56CDD9E559289D877'
    
_lr_action_items = {'DO':([5,6,7,9,10,12,14,15,16,18,21,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,66,69,71,74,],[-7,-5,-30,-6,-31,-29,-4,-8,-15,41,-29,-28,-11,-14,-9,-13,-12,-10,-27,-21,-24,-17,-25,-23,-16,-22,-18,-19,-26,-20,-32,-38,-36,-37,]),'SUB':([7,12,16,20,21,45,53,54,55,56,57,58,59,60,61,62,63,64,],[-30,-29,32,32,-29,-28,32,32,32,-17,32,32,-16,32,-18,-19,32,-20,]),'THEN':([5,6,7,9,10,12,14,15,16,21,28,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,66,69,71,74,],[-7,-5,-30,-6,-31,-29,-4,-8,-15,-29,52,-28,-11,-14,-9,-13,-12,-10,-27,-21,-24,-17,-25,-23,-16,-22,-18,-19,-26,-20,-32,-38,-36,-37,]),'DIV_ASSIGN':([12,],[26,]),'WHILE':([0,1,2,5,6,7,8,9,10,12,13,14,15,16,17,21,41,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,71,72,73,74,],[2,2,2,-7,-5,-30,-3,-6,-31,-29,2,-4,-8,-15,-2,-29,2,-28,-11,-14,-9,-13,-12,-10,2,-27,-21,-24,-17,-25,-23,-16,-22,-18,-19,-26,-20,2,-32,2,-38,-36,2,2,-37,]),'FUNC_ID':([0,1,2,5,6,7,8,9,10,12,13,14,15,16,17,21,41,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,71,72,73,74,],[3,3,3,-7,-5,-30,-3,-6,-31,-29,3,-4,-8,-15,-2,-29,3,-28,-11,-14,-9,-13,-12,-10,3,-27,-21,-24,-17,-25,-23,-16,-22,-18,-19,-26,-20,3,-32,3,-38,-36,3,3,-37,]),'MUL':([7,12,16,20,21,45,53,54,55,56,57,58,59,60,61,62,63,64,],[-30,-29,37,37,-29,-28,37,37,37,37,37,37,37,37,-18,-19,37,-20,]),'DIV':([7,12,16,20,21,45,53,54,55,56,57,58,59,60,61,62,63,64,],[-30,-29,38,38,-29,-28,38,38,38,38,38,38,38,38,-18,-19,38,-20,]),'RPAREN':([7,20,21,42,43,44,45,53,54,55,56,57,58,59,60,61,62,63,64,70,],[-30,45,-29,-35,66,-33,-28,-27,-21,-24,-17,-25,-23,-16,-22,-18,-19,-26,-20,-34,]),'LT':([7,12,16,20,21,45,53,54,55,56,57,58,59,60,61,62,63,64,],[-30,-29,34,34,-29,-28,34,None,None,-17,None,None,-16,None,-18,-19,34,-20,]),'NUM':([0,1,2,5,6,7,8,9,10,11,12,13,14,15,16,17,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,71,72,73,74,],[7,7,7,-7,-5,-30,-3,-6,-31,7,-29,7,-4,-8,-15,-2,-29,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-28,-11,-14,-9,-13,-12,-10,7,-27,-21,-24,-17,-25,-23,-16,-22,-18,-19,-26,-20,7,-32,7,-38,-36,7,7,-37,]),'COMMA':([42,43,44,70,],[-35,67,-33,-34,]),'ADD_ASSIGN':([12,],[27,]),'$end':([1,4,5,6,7,8,9,10,12,14,15,16,17,21,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,66,69,71,74,],[-1,0,-7,-5,-30,-3,-6,-31,-29,-4,-8,-15,-2,-29,-28,-11,-14,-9,-13,-12,-10,-27,-21,-24,-17,-25,-23,-16,-22,-18,-19,-26,-20,-32,-38,-36,-37,]),'SUB_ASSIGN':([12,],[22,]),'GT':([7,12,16,20,21,45,53,54,55,56,57,58,59,60,61,62,63,64,],[-30,-29,30,30,-29,-28,30,None,None,-17,None,None,-16,None,-18,-19,30,-20,]),'END':([5,6,7,8,9,10,12,14,15,16,17,21,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,71,73,74,],[-7,-5,-30,-3,-6,-31,-29,-4,-8,-15,-2,-29,-28,-11,-14,-9,-13,-12,-10,-27,-21,-24,-17,-25,-23,-16,-22,-18,-19,-26,-20,69,-32,71,-38,-36,74,-37,]),'GTE':([7,12,16,20,21,45,53,54,55,56,57,58,59,60,61,62,63,64,],[-30,-29,36,36,-29,-28,36,None,None,-17,None,None,-16,None,-18,-19,36,-20,]),'ELSE':([5,6,7,8,9,10,12,14,15,16,17,21,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,66,68,69,71,74,],[-7,-5,-30,-3,-6,-31,-29,-4,-8,-15,-2,-29,-28,-11,-14,-9,-13,-12,-10,-27,-21,-24,-17,-25,-23,-16,-22,-18,-19,-26,-20,-32,72,-38,-36,-37,]),'ADD':([7,12,16,20,21,45,53,54,55,56,57,58,59,60,61,62,63,64,],[-30,-29,35,35,-29,-28,35,35,35,-17,35,35,-16,35,-18,-19,35,-20,]),'COMMAND':([0,1,2,5,6,7,8,9,10,12,13,14,15,16,17,21,41,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,71,72,73,74,],[10,10,10,-7,-5,-30,-3,-6,-31,-29,10,-4,-8,-15,-2,-29,10,-28,-11,-14,-9,-13,-12,-10,10,-27,-21,-24,-17,-25,-23,-16,-22,-18,-19,-26,-20,10,-32,10,-38,-36,10,10,-37,]),'LTE':([7,12,16,20,21,45,53,54,55,56,57,58,59,60,61,62,63,64,],[-30,-29,31,31,-29,-28,31,None,None,-17,None,None,-16,None,-18,-19,31,-20,]),'LPAREN':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,71,72,73,74,],[11,11,11,19,-7,-5,-30,-3,-6,-31,11,-29,11,-4,-8,-15,-2,-29,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-28,-11,-14,-9,-13,-12,-10,11,-27,-21,-24,-17,-25,-23,-16,-22,-18,-19,-26,-20,11,-32,11,-38,-36,11,11,-37,]),'EQ':([7,12,16,20,21,45,53,54,55,56,57,58,59,60,61,62,63,64,],[-30,-29,33,33,-29,-28,33,None,None,-17,None,None,-16,None,-18,-19,33,-20,]),'ID':([0,1,2,5,6,7,8,9,10,11,12,13,14,15,16,17,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,71,72,73,74,],[12,12,12,-7,-5,-30,-3,-6,-31,21,-29,12,-4,-8,-15,-2,-29,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,12,-28,-11,-14,-9,-13,-12,-10,12,-27,-21,-24,-17,-25,-23,-16,-22,-18,-19,-26,-20,12,-32,12,-38,-36,12,12,-37,]),'IF':([0,1,2,5,6,7,8,9,10,12,13,14,15,16,17,21,41,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,71,72,73,74,],[13,13,13,-7,-5,-30,-3,-6,-31,-29,13,-4,-8,-15,-2,-29,13,-28,-11,-14,-9,-13,-12,-10,13,-27,-21,-24,-17,-25,-23,-16,-22,-18,-19,-26,-20,13,-32,13,-38,-36,13,13,-37,]),'AND':([7,12,16,20,21,45,53,54,55,56,57,58,59,60,61,62,63,64,],[-30,-29,29,29,-29,-28,-27,-21,-24,-17,-25,-23,-16,-22,-18,-19,29,-20,]),'MOD_ASSIGN':([12,],[23,]),'ASSIGN':([12,],[24,]),'MUL_ASSIGN':([12,],[25,]),'ARG':([19,67,],[42,42,]),'OR':([7,12,16,20,21,45,53,54,55,56,57,58,59,60,61,62,63,64,],[-30,-29,39,39,-29,-28,-27,-21,-24,-17,-25,-23,-16,-22,-18,-19,-26,-20,]),'MOD':([7,12,16,20,21,45,53,54,55,56,57,58,59,60,61,62,63,64,],[-30,-29,40,40,-29,-28,40,40,40,40,40,40,40,40,-18,-19,40,-20,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,41,52,72,],[1,65,68,73,]),'root_expression':([0,1,2,13,22,23,24,25,26,27,41,52,65,68,72,73,],[15,15,15,15,46,47,48,49,50,51,15,15,15,15,15,15,]),'assign_statement':([0,1,2,13,41,52,65,68,72,73,],[5,5,5,5,5,5,5,5,5,5,]),'args':([19,],[43,]),'start':([0,],[4,]),'while_statement':([0,1,2,13,41,52,65,68,72,73,],[6,6,6,6,6,6,6,6,6,6,]),'command':([0,1,2,13,41,52,65,68,72,73,],[14,14,14,14,14,14,14,14,14,14,]),'statement':([0,1,2,13,41,52,65,68,72,73,],[8,17,18,28,8,8,17,17,8,17,]),'arg':([19,67,],[44,70,]),'if_statement':([0,1,2,13,41,52,65,68,72,73,],[9,9,9,9,9,9,9,9,9,9,]),'expression':([0,1,2,11,13,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,52,65,68,72,73,],[16,16,16,20,16,16,16,16,16,16,16,53,54,55,56,57,58,59,60,61,62,63,64,16,16,16,16,16,16,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> statements','start',1,'p_start','compile.py',141),
  ('statements -> statements statement','statements',2,'p_statements','compile.py',146),
  ('statements -> statement','statements',1,'p_statements','compile.py',147),
  ('statement -> command','statement',1,'p_statement','compile.py',155),
  ('statement -> while_statement','statement',1,'p_statement','compile.py',156),
  ('statement -> if_statement','statement',1,'p_statement','compile.py',157),
  ('statement -> assign_statement','statement',1,'p_statement','compile.py',158),
  ('statement -> root_expression','statement',1,'p_statement','compile.py',159),
  ('assign_statement -> ID ASSIGN root_expression','assign_statement',3,'p_assign_statement','compile.py',165),
  ('assign_statement -> ID ADD_ASSIGN root_expression','assign_statement',3,'p_assign_statement','compile.py',166),
  ('assign_statement -> ID SUB_ASSIGN root_expression','assign_statement',3,'p_assign_statement','compile.py',167),
  ('assign_statement -> ID DIV_ASSIGN root_expression','assign_statement',3,'p_assign_statement','compile.py',168),
  ('assign_statement -> ID MUL_ASSIGN root_expression','assign_statement',3,'p_assign_statement','compile.py',169),
  ('assign_statement -> ID MOD_ASSIGN root_expression','assign_statement',3,'p_assign_statement','compile.py',170),
  ('root_expression -> expression','root_expression',1,'p_root_expression','compile.py',176),
  ('expression -> expression ADD expression','expression',3,'p_expression','compile.py',180),
  ('expression -> expression SUB expression','expression',3,'p_expression','compile.py',181),
  ('expression -> expression MUL expression','expression',3,'p_expression','compile.py',182),
  ('expression -> expression DIV expression','expression',3,'p_expression','compile.py',183),
  ('expression -> expression MOD expression','expression',3,'p_expression','compile.py',184),
  ('expression -> expression GT expression','expression',3,'p_expression','compile.py',185),
  ('expression -> expression GTE expression','expression',3,'p_expression','compile.py',186),
  ('expression -> expression LT expression','expression',3,'p_expression','compile.py',187),
  ('expression -> expression LTE expression','expression',3,'p_expression','compile.py',188),
  ('expression -> expression EQ expression','expression',3,'p_expression','compile.py',189),
  ('expression -> expression OR expression','expression',3,'p_expression','compile.py',190),
  ('expression -> expression AND expression','expression',3,'p_expression','compile.py',191),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','compile.py',192),
  ('expression -> ID','expression',1,'p_expression','compile.py',193),
  ('expression -> NUM','expression',1,'p_expression','compile.py',194),
  ('command -> COMMAND','command',1,'p_command','compile.py',205),
  ('command -> FUNC_ID LPAREN args RPAREN','command',4,'p_command','compile.py',206),
  ('args -> arg','args',1,'p_args','compile.py',215),
  ('args -> args COMMA arg','args',3,'p_args','compile.py',216),
  ('arg -> ARG','arg',1,'p_arg','compile.py',224),
  ('if_statement -> IF statement THEN statements END','if_statement',5,'p_if_statement','compile.py',229),
  ('if_statement -> IF statement THEN statements ELSE statements END','if_statement',7,'p_if_else_statement','compile.py',233),
  ('while_statement -> WHILE statement DO statements END','while_statement',5,'p_while_statement','compile.py',237),
]
