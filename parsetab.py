
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '82D683CF57A6BCF4E25A71279A040692'
    
_lr_action_items = {'DO':([9,15,16,18,19,20,21,22,24,25,36,60,62,63,64,65,66,67,68,69,70,71,72,73,74,76,],[-39,-36,-35,-32,-31,-37,-33,35,-34,-15,-16,-30,-29,-22,-25,-18,-27,-24,-26,-17,-23,-19,-20,-28,-21,-38,]),'SUB':([9,15,16,18,19,20,21,24,25,34,36,60,62,63,64,65,66,67,68,69,70,71,72,73,74,76,],[-39,-36,-35,-32,-31,-37,-33,-34,40,40,-16,-30,40,40,40,-18,40,40,40,-17,40,-19,-20,40,-21,-38,]),'THEN':([9,15,16,18,19,20,21,24,25,32,36,60,62,63,64,65,66,67,68,69,70,71,72,73,74,76,],[-39,-36,-35,-32,-31,-37,-33,-34,-15,56,-16,-30,-29,-22,-25,-18,-27,-24,-26,-17,-23,-19,-20,-28,-21,-38,]),'DIV_ASSIGN':([11,],[30,]),'WHILE':([0,1,4,5,6,7,8,9,10,14,15,16,18,19,20,21,24,25,35,36,50,51,52,53,54,55,56,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,82,83,],[2,2,-7,-5,-3,-4,-6,-39,-8,-2,-36,-35,-32,-31,-37,-33,-34,-15,2,-16,-11,-14,-9,-13,-12,-10,2,-30,2,-29,-22,-25,-18,-27,-24,-26,-17,-23,-19,-20,-28,-21,2,-38,-45,-43,2,2,-44,]),'FUNC_ID':([0,1,2,4,5,6,7,8,9,10,12,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,82,83,],[13,13,13,-7,-5,-3,-4,-6,-39,-8,13,-2,-36,-35,13,-32,-31,-37,-33,13,-34,-15,13,13,13,13,13,13,13,-16,13,13,13,13,13,13,13,13,13,13,13,13,13,-11,-14,-9,-13,-12,-10,13,-30,13,-29,-22,-25,-18,-27,-24,-26,-17,-23,-19,-20,-28,-21,13,-38,-45,-43,13,13,-44,]),'MUL':([9,15,16,18,19,20,21,24,25,34,36,60,62,63,64,65,66,67,68,69,70,71,72,73,74,76,],[-39,-36,-35,-32,-31,-37,-33,-34,46,46,-16,-30,46,46,46,46,46,46,46,46,46,-19,-20,46,-21,-38,]),'DIV':([9,15,16,18,19,20,21,24,25,34,36,60,62,63,64,65,66,67,68,69,70,71,72,73,74,76,],[-39,-36,-35,-32,-31,-37,-33,-34,47,47,-16,-30,47,47,47,47,47,47,47,47,47,-19,-20,47,-21,-38,]),'TRUE':([2,12,17,23,26,27,28,29,30,31,37,38,39,40,41,42,43,44,45,46,47,48,49,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'RPAREN':([9,15,16,18,19,20,21,24,34,36,57,58,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,76,81,],[-39,-36,-35,-32,-31,-37,-33,-34,60,-16,-42,76,-40,-30,-29,-22,-25,-18,-27,-24,-26,-17,-23,-19,-20,-28,-21,-38,-41,]),'LTE':([9,15,16,18,19,20,21,24,25,34,36,60,62,63,64,65,66,67,68,69,70,71,72,73,74,76,],[-39,-36,-35,-32,-31,-37,-33,-34,39,39,-16,-30,39,None,None,-18,None,None,None,-17,None,-19,-20,39,-21,-38,]),'NE':([9,15,16,18,19,20,21,24,25,34,36,60,62,63,64,65,66,67,68,69,70,71,72,73,74,76,],[-39,-36,-35,-32,-31,-37,-33,-34,43,43,-16,-30,43,None,None,-18,None,None,None,-17,None,-19,-20,43,-21,-38,]),'LT':([9,15,16,18,19,20,21,24,25,34,36,60,62,63,64,65,66,67,68,69,70,71,72,73,74,76,],[-39,-36,-35,-32,-31,-37,-33,-34,42,42,-16,-30,42,None,None,-18,None,None,None,-17,None,-19,-20,42,-21,-38,]),'NUM':([2,12,17,23,26,27,28,29,30,31,37,38,39,40,41,42,43,44,45,46,47,48,49,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'COMMA':([57,58,59,81,],[-42,77,-40,-41,]),'ADD_ASSIGN':([11,],[31,]),'$end':([1,3,4,5,6,7,8,9,10,14,15,16,18,19,20,21,24,25,36,50,51,52,53,54,55,60,62,63,64,65,66,67,68,69,70,71,72,73,74,76,78,79,83,],[-1,0,-7,-5,-3,-4,-6,-39,-8,-2,-36,-35,-32,-31,-37,-33,-34,-15,-16,-11,-14,-9,-13,-12,-10,-30,-29,-22,-25,-18,-27,-24,-26,-17,-23,-19,-20,-28,-21,-38,-45,-43,-44,]),'SUB_ASSIGN':([11,],[26,]),'GT':([9,15,16,18,19,20,21,24,25,34,36,60,62,63,64,65,66,67,68,69,70,71,72,73,74,76,],[-39,-36,-35,-32,-31,-37,-33,-34,38,38,-16,-30,38,None,None,-18,None,None,None,-17,None,-19,-20,38,-21,-38,]),'END':([4,5,6,7,8,9,10,14,15,16,18,19,20,21,24,25,36,50,51,52,53,54,55,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,82,83,],[-7,-5,-3,-4,-6,-39,-8,-2,-36,-35,-32,-31,-37,-33,-34,-15,-16,-11,-14,-9,-13,-12,-10,-30,78,-29,-22,-25,-18,-27,-24,-26,-17,-23,-19,-20,-28,-21,79,-38,-45,-43,83,-44,]),'GTE':([9,15,16,18,19,20,21,24,25,34,36,60,62,63,64,65,66,67,68,69,70,71,72,73,74,76,],[-39,-36,-35,-32,-31,-37,-33,-34,45,45,-16,-30,45,None,None,-18,None,None,None,-17,None,-19,-20,45,-21,-38,]),'ELSE':([4,5,6,7,8,9,10,14,15,16,18,19,20,21,24,25,36,50,51,52,53,54,55,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,83,],[-7,-5,-3,-4,-6,-39,-8,-2,-36,-35,-32,-31,-37,-33,-34,-15,-16,-11,-14,-9,-13,-12,-10,-30,-29,-22,-25,-18,-27,-24,-26,-17,-23,-19,-20,-28,-21,80,-38,-45,-43,-44,]),'ADD':([9,15,16,18,19,20,21,24,25,34,36,60,62,63,64,65,66,67,68,69,70,71,72,73,74,76,],[-39,-36,-35,-32,-31,-37,-33,-34,44,44,-16,-30,44,44,44,-18,44,44,44,-17,44,-19,-20,44,-21,-38,]),'COMMAND':([0,1,2,4,5,6,7,8,9,10,12,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,82,83,],[9,9,9,-7,-5,-3,-4,-6,-39,-8,9,-2,-36,-35,9,-32,-31,-37,-33,9,-34,-15,9,9,9,9,9,9,9,-16,9,9,9,9,9,9,9,9,9,9,9,9,9,-11,-14,-9,-13,-12,-10,9,-30,9,-29,-22,-25,-18,-27,-24,-26,-17,-23,-19,-20,-28,-21,9,-38,-45,-43,9,9,-44,]),'LPAREN':([2,12,13,17,23,26,27,28,29,30,31,37,38,39,40,41,42,43,44,45,46,47,48,49,],[17,17,33,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'EQ':([9,15,16,18,19,20,21,24,25,34,36,60,62,63,64,65,66,67,68,69,70,71,72,73,74,76,],[-39,-36,-35,-32,-31,-37,-33,-34,41,41,-16,-30,41,None,None,-18,None,None,None,-17,None,-19,-20,41,-21,-38,]),'ID':([0,1,2,4,5,6,7,8,9,10,12,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,82,83,],[11,11,19,-7,-5,-3,-4,-6,-39,-8,19,-2,-36,-35,19,-32,-31,-37,-33,19,-34,-15,19,19,19,19,19,19,11,-16,19,19,19,19,19,19,19,19,19,19,19,19,19,-11,-14,-9,-13,-12,-10,11,-30,11,-29,-22,-25,-18,-27,-24,-26,-17,-23,-19,-20,-28,-21,11,-38,-45,-43,11,11,-44,]),'IF':([0,1,4,5,6,7,8,9,10,14,15,16,18,19,20,21,24,25,35,36,50,51,52,53,54,55,56,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,82,83,],[12,12,-7,-5,-3,-4,-6,-39,-8,-2,-36,-35,-32,-31,-37,-33,-34,-15,12,-16,-11,-14,-9,-13,-12,-10,12,-30,12,-29,-22,-25,-18,-27,-24,-26,-17,-23,-19,-20,-28,-21,12,-38,-45,-43,12,12,-44,]),'AND':([9,15,16,18,19,20,21,24,25,34,36,60,62,63,64,65,66,67,68,69,70,71,72,73,74,76,],[-39,-36,-35,-32,-31,-37,-33,-34,37,37,-16,-30,-29,-22,-25,-18,-27,-24,-26,-17,-23,-19,-20,37,-21,-38,]),'MOD_ASSIGN':([11,],[27,]),'FALSE':([2,12,17,23,26,27,28,29,30,31,37,38,39,40,41,42,43,44,45,46,47,48,49,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'ASSIGN':([11,],[28,]),'MUL_ASSIGN':([11,],[29,]),'ARG':([33,77,],[57,57,]),'NOT':([2,12,17,23,26,27,28,29,30,31,37,38,39,40,41,42,43,44,45,46,47,48,49,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'OR':([9,15,16,18,19,20,21,24,25,34,36,60,62,63,64,65,66,67,68,69,70,71,72,73,74,76,],[-39,-36,-35,-32,-31,-37,-33,-34,48,48,-16,-30,-29,-22,-25,-18,-27,-24,-26,-17,-23,-19,-20,-28,-21,-38,]),'MOD':([9,15,16,18,19,20,21,24,25,34,36,60,62,63,64,65,66,67,68,69,70,71,72,73,74,76,],[-39,-36,-35,-32,-31,-37,-33,-34,49,49,-16,-30,49,49,49,49,49,49,49,49,49,-19,-20,49,-21,-38,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,35,56,80,],[1,61,75,82,]),'func':([0,1,2,12,17,23,26,27,28,29,30,31,35,37,38,39,40,41,42,43,44,45,46,47,48,49,56,61,75,80,82,],[10,10,24,24,24,24,24,24,24,24,24,24,10,24,24,24,24,24,24,24,24,24,24,24,24,24,10,10,10,10,10,]),'assign_statement':([0,1,35,56,61,75,80,82,],[4,4,4,4,4,4,4,4,]),'args':([33,],[58,]),'start':([0,],[3,]),'while_statement':([0,1,35,56,61,75,80,82,],[5,5,5,5,5,5,5,5,]),'command':([0,1,2,12,17,23,26,27,28,29,30,31,35,37,38,39,40,41,42,43,44,45,46,47,48,49,56,61,75,80,82,],[7,7,21,21,21,21,21,21,21,21,21,21,7,21,21,21,21,21,21,21,21,21,21,21,21,21,7,7,7,7,7,]),'statement':([0,1,35,56,61,75,80,82,],[6,14,6,6,14,14,6,14,]),'arg':([33,77,],[59,81,]),'const':([2,12,17,23,26,27,28,29,30,31,37,38,39,40,41,42,43,44,45,46,47,48,49,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'if_statement':([0,1,35,56,61,75,80,82,],[8,8,8,8,8,8,8,8,]),'expression':([2,12,17,23,26,27,28,29,30,31,37,38,39,40,41,42,43,44,45,46,47,48,49,],[25,25,34,36,25,25,25,25,25,25,62,63,64,65,66,67,68,69,70,71,72,73,74,]),'root_expression':([2,12,26,27,28,29,30,31,],[22,32,50,51,52,53,54,55,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> statements','start',1,'p_start','compile.py',148),
  ('statements -> statements statement','statements',2,'p_statements','compile.py',153),
  ('statements -> statement','statements',1,'p_statements','compile.py',154),
  ('statement -> command','statement',1,'p_statement','compile.py',162),
  ('statement -> while_statement','statement',1,'p_statement','compile.py',163),
  ('statement -> if_statement','statement',1,'p_statement','compile.py',164),
  ('statement -> assign_statement','statement',1,'p_statement','compile.py',165),
  ('statement -> func','statement',1,'p_statement','compile.py',166),
  ('assign_statement -> ID ASSIGN root_expression','assign_statement',3,'p_assign_statement','compile.py',172),
  ('assign_statement -> ID ADD_ASSIGN root_expression','assign_statement',3,'p_assign_statement','compile.py',173),
  ('assign_statement -> ID SUB_ASSIGN root_expression','assign_statement',3,'p_assign_statement','compile.py',174),
  ('assign_statement -> ID DIV_ASSIGN root_expression','assign_statement',3,'p_assign_statement','compile.py',175),
  ('assign_statement -> ID MUL_ASSIGN root_expression','assign_statement',3,'p_assign_statement','compile.py',176),
  ('assign_statement -> ID MOD_ASSIGN root_expression','assign_statement',3,'p_assign_statement','compile.py',177),
  ('root_expression -> expression','root_expression',1,'p_root_expression','compile.py',183),
  ('expression -> NOT expression','expression',2,'p_not_expression','compile.py',187),
  ('expression -> expression ADD expression','expression',3,'p_expression','compile.py',192),
  ('expression -> expression SUB expression','expression',3,'p_expression','compile.py',193),
  ('expression -> expression MUL expression','expression',3,'p_expression','compile.py',194),
  ('expression -> expression DIV expression','expression',3,'p_expression','compile.py',195),
  ('expression -> expression MOD expression','expression',3,'p_expression','compile.py',196),
  ('expression -> expression GT expression','expression',3,'p_expression','compile.py',197),
  ('expression -> expression GTE expression','expression',3,'p_expression','compile.py',198),
  ('expression -> expression LT expression','expression',3,'p_expression','compile.py',199),
  ('expression -> expression LTE expression','expression',3,'p_expression','compile.py',200),
  ('expression -> expression NE expression','expression',3,'p_expression','compile.py',201),
  ('expression -> expression EQ expression','expression',3,'p_expression','compile.py',202),
  ('expression -> expression OR expression','expression',3,'p_expression','compile.py',203),
  ('expression -> expression AND expression','expression',3,'p_expression','compile.py',204),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','compile.py',205),
  ('expression -> ID','expression',1,'p_expression','compile.py',206),
  ('expression -> const','expression',1,'p_expression','compile.py',207),
  ('expression -> command','expression',1,'p_expression','compile.py',208),
  ('expression -> func','expression',1,'p_expression','compile.py',209),
  ('const -> NUM','const',1,'p_const','compile.py',222),
  ('const -> TRUE','const',1,'p_const','compile.py',223),
  ('const -> FALSE','const',1,'p_const','compile.py',224),
  ('func -> FUNC_ID LPAREN args RPAREN','func',4,'p_func','compile.py',228),
  ('command -> COMMAND','command',1,'p_command','compile.py',232),
  ('args -> arg','args',1,'p_args','compile.py',236),
  ('args -> args COMMA arg','args',3,'p_args','compile.py',237),
  ('arg -> ARG','arg',1,'p_arg','compile.py',246),
  ('if_statement -> IF root_expression THEN statements END','if_statement',5,'p_if_statement','compile.py',251),
  ('if_statement -> IF root_expression THEN statements ELSE statements END','if_statement',7,'p_if_else_statement','compile.py',255),
  ('while_statement -> WHILE root_expression DO statements END','while_statement',5,'p_while_statement','compile.py',259),
]
